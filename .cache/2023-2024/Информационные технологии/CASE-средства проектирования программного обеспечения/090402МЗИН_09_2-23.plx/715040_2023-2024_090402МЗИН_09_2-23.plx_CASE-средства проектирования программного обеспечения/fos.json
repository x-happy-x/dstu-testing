{"result": true, "message": null, "sysData": null, "data": {"commonState": {"hash": "S5PMUZUOk1iW/icOO5XKtA==", "hasChanges": false, "isEmpty": false, "app": {"version": "0.4.3.6"}}, "field1": "Контрольные вопросы для самоподготовки:\r\n\r\n1.\tCASE-технология. CASE-средства. CASE-системы.\r\n2.\tКлассификация CASE-средств.\r\n3.\tЖизненный цикл программного обеспечения. Модели жизненного цикла программного обеспечения.\r\n4.\tПричины возникновения ошибок при разработке программных средств. CASE-модель жизненного цикла программного обеспечения.\r\n5.\tОбласти применения CASE-технологий. Классификация технологии разработки информационных систем.\r\n6.\tИнформационная инженерия и обратное перепроектирование.\r\n7.\tПроцесс разработки программного обеспечения с использованием CASE-средств.\r\n8.\tЭтап анализа в жизненном цикле программного обеспечения.\r\n9.\tМетодологические аспекты анализа целей и требований к разрабатываемому программному обеспечению.\r\n10.\tПроектирование, ориентированное на данные.\r\n11.\tФункционально-ориентированное (структурное) проектирование программного обеспечения.\r\n12.\tДиаграммные методологии проектирования программного обеспечения.\r\n13.\tСтруктурные методологии и подходы к анализу и проектированию.\r\n14.\tСтруктурные методологии: стандарты IDEF. IDEF0.\r\n15.\tСтруктурные методологии: стандарты IDEF. IDEF1X. Нормализация данных.\r\n16.\tСтруктурные методологии: стандарты IDEF. IDEF3. Отличие IDEF3 от IDEF0.\r\n17.\tОбзор методологии ARIS. Сравнение ARIS и IDEF3.\r\n18.\tСтруктурные методологии. DFD.\r\n19.\tМетодология DATARUN проектирования информационных систем.\r\n20.\tCASE-средства поддержки структурных методологий.\r\n21.\tМетодики объектно-ориентированного анализа и проектирования.\r\n22.\tКлассификация, основные этапы и задачи объектно-ориентированных методов анализа и проектирования.\r\n23.\tМетодология онтологического анализа IDEF5.\r\n24.\tЯзык моделирования UML. Синтаксис. Семантика. Пакеты. Канонические диаграммы.\r\n25.\tЯзык моделирования UML – диаграммы вариантов использования и сценарии.\r\n26.\tЯзык моделирования UML – диаграммы классов и их использование.\r\n27.\tЯзык моделирования UML – диаграммы кооперации и диаграммы последовательности.\r\n28.\tЯзык моделирования UML – диаграммы состояний и диаграммы деятельности.\r\n29.\tЯзык моделирования UML – диаграммы компонентов и диаграммы развертывания.\r\n30.\tОбъектно-ориентированное проектирование программного обеспечения.\r\n31.\tМетодология объектно-ориентированной разработки RUP (Ration Unified Process).\r\n32.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Обзор, основные концепции.\r\n33.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Модель процессов в MSF.\r\n34.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап анализа в MSF.\r\n35.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап планирования в MSF.\r\n36.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап разработки в MSF.\r\n37.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этапы контроля качества и внедрения в MSF.\r\n38.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Модель команды разработчиков в MSF. Преимущества и недостатки.\r\n39.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Дисциплина управления проектом.\r\n40.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Масштабируемость.\r\n41.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Иерархическая структура работ (WBS).\r\n42.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Оценка сроков разработки. Составление календарного графика работ в проекте.\r\n43.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Диаграммы вариантов использования системы и сценариев использования системы.\r\n44.\tНадежность программного обеспечения (ПО). CASE-средства и надежность ПО. Контроль качества ПО.\r\n45.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление компромиссами в MSF.\r\n46.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Стратегия выпуска версий в MSF.\r\n47.\tПринципы проектирования сложных систем.\r\n48.\tМетодология XP - «экстремальное программирование» : особенности, преимущества, недостатки.\r\n49.\tДополнительные средства поддержки жизненного цикла разработки программного обеспечения. Классификация инструментальных систем.\r\n50.\tСистемы управления задачами и заявками. Основные понятия. Обзор.\r\n51.\tСистемы отслеживания ошибок (Bug-tracking). Основные понятия. Обзор.\r\n52.\tСистема отслеживания ошибок Bugzilla.\r\n53.\tСистема управления задачами JIRA.\r\n54.\tСистема управления задачами TracStudio.\r\n55.\tСистемы управления версиями. Основные понятия. Обзор.\r\n56.\tСистемы управления версиями. Модели версионирования.\r\n57.\tСистемы управления версиями. RCS. CVS.\r\n58.\tСистемы управления версиями. SVN. Основные возможности.\r\n59.\tСистемы управления версиями. SVN. Внутренняя архитектура, компоненты.\r\n60.\tСистемы управления версиями. Perforce. GIT.\r\n61.\tСистема управления проектом Borland StarTeam. Обзор. Контроль версий.\r\n62.\tСистема управления проектом Borland StarTeam. Обзор. Планирование.\r\n63.\tСредства управления требованиями, конфигурационного управления, документирования, тестирования, поддержки коллективной разработки.\r\n64.\tГибкие и адаптивные методики разработки.\r\n65.\tТехнология внедрения CASE-средств.\r\n66.\tОпределение потребностей в CASE-средствах.\r\n67.\tОценка и выбор CASE-средств.\r\n68.\tВыполнение пилотного проекта.\r\n69.\tПрактическое внедрение CASE-средств.\r\n70.\tСистемы автоматизации сборки программных средств.\r\n71.\tСистемы автоматизации тестирования программных средств.\r\n72.\tПерспективы развития CASE-средств.\r\n73.\tОсновы методологии проектирования ИС: жизненный цикл ИС. Сущность структурного подхода к проектированию ИС. \r\n74.\tМоделирование жизненного цикла ПО. Состав функциональной модели. Методологии и технологии проектирования ИС. Вспомогательные средства поддержки жизненного цикла ПО: средства конфигурационного управления. \r\n75.\tМетодология функционального моделирования SADT. Построение иерархии диаграмм потоков данных. Модели жизненного цикла ПО. \r\n76.\tМетодология RAD. Вспомогательные средства поддержки жизненного цикла ПО: средства документирования. \r\n77.\tЛокальные средства (ERwin, BPwin, S-Designor, CASE.Аналитик). Вспомогательные средства поддержки жизненного цикла ПО: средства тестирования. \r\n78.\tОценка и выбор CASE-средств: критерии оценки и выбора. Моделирование данных: методология IDEF1.Анализ рынка CASE-средств. \r\n79.\tИерархия диаграмм и типы. Структурный подход: описание предметной области. Структурный подход: описание проекта. \r\n80.\tОпределение потребностей в CASE-средствах: анализ возможностей организации. Моделирование данных: сase-метод Баркера. \r\n81.\tОпределение критериев успешного внедрения CASE.Методологии проектирования ПО DATARUN. Разработка стратегии внедрения CASE-средств. Инструментальное средство SE Companion. Характеристики CASE-средств: Vantage Team Builder. Определение организационных потребностей в CASE-средствах.\r\n82.\tМоделирование данных в Vantage Team Builder.\t\r\n83.\tМетодология функционального моделирования SADT: типы связей между функциями. \r\n84.\tCASE-средства. Общая характеристика и классификация\r\n85.\tОбъектно-ориентированные CASE-средства. \r\n86.\tВспомогательные средства поддержки жизненного цикла ПО\r\n\r\nКонтрольные вопросы к промежуточной аттестации:\r\n\r\n1.\tCASE-технология. CASE-средства. CASE-системы.\r\n2.\tКлассификация CASE-средств.\r\n3.\tЖизненный цикл программного обеспечения. Модели жизненного цикла программного обеспечения.\r\n4.\tПричины возникновения ошибок при разработке программных средств. CASE-модель жизненного цикла программного обеспечения.\r\n5.\tОбласти применения CASE-технологий. Классификация технологии разработки информационных систем.\r\n6.\tИнформационная инженерия и обратное перепроектирование.\r\n7.\tПроцесс разработки программного обеспечения с использованием CASE-средств.\r\n8.\tЭтап анализа в жизненном цикле программного обеспечения.\r\n9.\tМетодологические аспекты анализа целей и требований к разрабатываемому программному обеспечению.\r\n10.\tПроектирование, ориентированное на данные.\r\n11.\tФункционально-ориентированное (структурное) проектирование программного обеспечения.\r\n12.\tДиаграммные методологии проектирования программного обеспечения.\r\n13.\tСтруктурные методологии и подходы к анализу и проектированию.\r\n14.\tСтруктурные методологии: стандарты IDEF. IDEF0.\r\n15.\tСтруктурные методологии: стандарты IDEF. IDEF1X. Нормализация данных.\r\n16.\tСтруктурные методологии: стандарты IDEF. IDEF3. Отличие IDEF3 от IDEF0.\r\n17.\tОбзор методологии ARIS. Сравнение ARIS и IDEF3.\r\n18.\tСтруктурные методологии. DFD.\r\n19.\tМетодология DATARUN проектирования информационных систем.\r\n20.\tCASE-средства поддержки структурных методологий.\r\n21.\tМетодики объектно-ориентированного анализа и проектирования.\r\n22.\tКлассификация, основные этапы и задачи объектно-ориентированных методов анализа и проектирования.\r\n23.\tМетодология онтологического анализа IDEF5.\r\n24.\tЯзык моделирования UML. Синтаксис. Семантика. Пакеты. Канонические диаграммы.\r\n25.\tЯзык моделирования UML – диаграммы вариантов использования и сценарии.\r\n26.\tЯзык моделирования UML – диаграммы классов и их использование.\r\n27.\tЯзык моделирования UML – диаграммы кооперации и диаграммы последовательности.\r\n28.\tЯзык моделирования UML – диаграммы состояний и диаграммы деятельности.\r\n29.\tЯзык моделирования UML – диаграммы компонентов и диаграммы развертывания.\r\n30.\tОбъектно-ориентированное проектирование программного обеспечения.\r\n31.\tМетодология объектно-ориентированной разработки RUP (Ration Unified Process).\r\n32.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Обзор, основные концепции.\r\n33.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Модель процессов в MSF.\r\n34.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап анализа в MSF.\r\n35.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап планирования в MSF.\r\n36.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этап разработки в MSF.\r\n37.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Этапы контроля качества и внедрения в MSF.\r\n38.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Модель команды разработчиков в MSF. Преимущества и недостатки.\r\n39.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Дисциплина управления проектом.\r\n40.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Масштабируемость.\r\n41.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Иерархическая структура работ (WBS).\r\n42.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление проектом в MSF. Общий обзор. Оценка сроков разработки. Составление календарного графика работ в проекте.\r\n43.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Диаграммы вариантов использования системы и сценариев использования системы.\r\n44.\tНадежность программного обеспечения (ПО). CASE-средства и надежность ПО. Контроль качества ПО.\r\n45.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Управление компромиссами в MSF.\r\n46.\tМетодология разработки программных систем MSF (Microsoft Solutions Framework). Стратегия выпуска версий в MSF.\r\n47.\tПринципы проектирования сложных систем.\r\n48.\tМетодология XP - «экстремальное программирование» : особенности, преимущества, недостатки.\r\n49.\tДополнительные средства поддержки жизненного цикла разработки программного обеспечения. Классификация инструментальных систем.\r\n50.\tСистемы управления задачами и заявками. Основные понятия. Обзор.\r\n51.\tСистемы отслеживания ошибок (Bug-tracking). Основные понятия. Обзор.\r\n52.\tСистема отслеживания ошибок Bugzilla.\r\n53.\tСистема управления задачами JIRA.\r\n54.\tСистема управления задачами TracStudio.\r\n55.\tСистемы управления версиями. Основные понятия. Обзор.\r\n56.\tСистемы управления версиями. Модели версионирования.\r\n57.\tСистемы управления версиями. RCS. CVS.\r\n58.\tСистемы управления версиями. SVN. Основные возможности.\r\n59.\tСистемы управления версиями. SVN. Внутренняя архитектура, компоненты.\r\n60.\tСистемы управления версиями. Perforce. GIT.\r\n61.\tСистема управления проектом Borland StarTeam. Обзор. Контроль версий.\r\n62.\tСистема управления проектом Borland StarTeam. Обзор. Планирование.\r\n63.\tСредства управления требованиями, конфигурационного управления, документирования, тестирования, поддержки коллективной разработки.\r\n64.\tГибкие и адаптивные методики разработки.\r\n65.\tТехнология внедрения CASE-средств.\r\n66.\tОпределение потребностей в CASE-средствах.\r\n67.\tОценка и выбор CASE-средств.\r\n68.\tВыполнение пилотного проекта.\r\n69.\tПрактическое внедрение CASE-средств.\r\n70.\tСистемы автоматизации сборки программных средств.\r\n71.\tСистемы автоматизации тестирования программных средств.\r\n72.\tПерспективы развития CASE-средств.\r\n73.\tОсновы методологии проектирования ИС: жизненный цикл ИС. Сущность структурного подхода к проектированию ИС. \r\n74.\tМоделирование жизненного цикла ПО. Состав функциональной модели. Методологии и технологии проектирования ИС. Вспомогательные средства поддержки жизненного цикла ПО: средства конфигурационного управления. \r\n75.\tМетодология функционального моделирования SADT. Построение иерархии диаграмм потоков данных. Модели жизненного цикла ПО. \r\n76.\tМетодология RAD. Вспомогательные средства поддержки жизненного цикла ПО: средства документирования. \r\n77.\tЛокальные средства (ERwin, BPwin, S-Designor, CASE.Аналитик). Вспомогательные средства поддержки жизненного цикла ПО: средства тестирования. \r\n78.\tОценка и выбор CASE-средств: критерии оценки и выбора. Моделирование данных: методология IDEF1.Анализ рынка CASE-средств. \r\n79.\tИерархия диаграмм и типы. Структурный подход: описание предметной области. Структурный подход: описание проекта. \r\n80.\tОпределение потребностей в CASE-средствах: анализ возможностей организации. Моделирование данных: сase-метод Баркера. \r\n81.\tОпределение критериев успешного внедрения CASE.Методологии проектирования ПО DATARUN. Разработка стратегии внедрения CASE-средств. Инструментальное средство SE Companion. Характеристики CASE-средств: Vantage Team Builder. Определение организационных потребностей в CASE-средствах.\r\n82.\tМоделирование данных в Vantage Team Builder.\t\r\n83.\tМетодология функционального моделирования SADT: типы связей между функциями. \r\n84.\tCASE-средства. Общая характеристика и классификация\r\n85.\tОбъектно-ориентированные CASE-средства. \r\n86.\tВспомогательные средства поддержки жизненного цикла ПОаттестации:\r\n\r\n", "field2": "Не предусмотрено", "field3": "Комплект оценочных материалов по дисциплине CASE-средства проектирования программного обеспечения прилагается", "field4": "1. Вопросы к промежуточной аттестации (Примерный список вопросов и структура экзаменационного задания; критерии оценки ответов)\r\n2. Лабораторные работы (Задания для лабораторных работ с указанием формы отчета обучающегося.) \r\n\r\n", "field5": null, "metodRecomendationForControlWork": null, "metodRecomendationForKursRab": null, "controlForms": []}}